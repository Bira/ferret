#!/usr/bin/ruby
data = ARGV.map {|fn| File.read(fn).sub(/^.*\n.*\n/, '')}.join

puts "#ifndef FRT_INTERNAL_H"
puts "#define FRT_INTERNAL_H"
puts

[
  ['Constants',  'FRT_'   ],
  ['Types',      'Ferret' ],
  ['Functions',  'frt_'   ]
].each do |header, re|
  names = data.scan(/#{re}[A-Za-z_]+/).sort.uniq
  next unless names and names.size > 0
  puts "/* #{header} */"
  maxlen = names.map{|name| name.size}.max - re.size
  names.each do |name|
    puts "#define %-#{maxlen}s #{name}" % name.sub(/^#{re}/, '')
  end

  puts
end
puts "#endif"
